(self.webpackChunkapp_studio_enterprise_error_list_dialog=self.webpackChunkapp_studio_enterprise_error_list_dialog||[]).push([[2583],{92583:(P,g,r)=>{r.r(g),r.d(g,{MAT_INPUT_VALUE_ACCESSOR:()=>m,MatInput:()=>a,MatInputModule:()=>d,getMatInputUnsupportedTypeError:()=>M});var c=r(24897),p=r(18081),h=r(90865),e=r(59131),l=r(56711),o=r(59445),s=r(98093),I=r(62278);function M(f){return Error(`Input type "${f}" isn't supported by matInput.`)}const m=new e.InjectionToken("MAT_INPUT_VALUE_ACCESSOR"),F=["button","checkbox","file","hidden","image","radio","range","reset","submit"];let S=0;const b=(0,o.mixinErrorState)(class{constructor(f,t,n,i){this._defaultErrorStateMatcher=f,this._parentForm=t,this._parentFormGroup=n,this.ngControl=i,this.stateChanges=new I.Subject}});class a extends b{get disabled(){return this._disabled}set disabled(t){this._disabled=(0,c.coerceBooleanProperty)(t),this.focused&&(this.focused=!1,this.stateChanges.next())}get id(){return this._id}set id(t){this._id=t||this._uid}get required(){return this._required??this.ngControl?.control?.hasValidator(l.Validators.required)??!1}set required(t){this._required=(0,c.coerceBooleanProperty)(t)}get type(){return this._type}set type(t){this._type=t||"text",this._validateType(),!this._isTextarea&&(0,p.getSupportedInputTypes)().has(this._type)&&(this._elementRef.nativeElement.type=this._type)}get value(){return this._inputValueAccessor.value}set value(t){t!==this.value&&(this._inputValueAccessor.value=t,this.stateChanges.next())}get readonly(){return this._readonly}set readonly(t){this._readonly=(0,c.coerceBooleanProperty)(t)}constructor(t,n,i,_,A,O,D,N,T,E){super(O,_,A,i),this._elementRef=t,this._platform=n,this._autofillMonitor=N,this._formField=E,this._uid=`mat-input-${S++}`,this.focused=!1,this.stateChanges=new I.Subject,this.controlType="mat-input",this.autofilled=!1,this._disabled=!1,this._type="text",this._readonly=!1,this._neverEmptyInputTypes=["date","datetime","datetime-local","month","time","week"].filter(v=>(0,p.getSupportedInputTypes)().has(v)),this._iOSKeyupListener=v=>{const u=v.target;!u.value&&u.selectionStart===0&&u.selectionEnd===0&&(u.setSelectionRange(1,1),u.setSelectionRange(0,0))};const y=this._elementRef.nativeElement,C=y.nodeName.toLowerCase();this._inputValueAccessor=D||y,this._previousNativeValue=this.value,this.id=this.id,n.IOS&&T.runOutsideAngular(()=>{t.nativeElement.addEventListener("keyup",this._iOSKeyupListener)}),this._isServer=!this._platform.isBrowser,this._isNativeSelect=C==="select",this._isTextarea=C==="textarea",this._isInFormField=!!E,this._isNativeSelect&&(this.controlType=y.multiple?"mat-native-select-multiple":"mat-native-select")}ngAfterViewInit(){this._platform.isBrowser&&this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(t=>{this.autofilled=t.isAutofilled,this.stateChanges.next()})}ngOnChanges(){this.stateChanges.next()}ngOnDestroy(){this.stateChanges.complete(),this._platform.isBrowser&&this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement),this._platform.IOS&&this._elementRef.nativeElement.removeEventListener("keyup",this._iOSKeyupListener)}ngDoCheck(){this.ngControl&&(this.updateErrorState(),this.ngControl.disabled!==null&&this.ngControl.disabled!==this.disabled&&(this.disabled=this.ngControl.disabled,this.stateChanges.next())),this._dirtyCheckNativeValue(),this._dirtyCheckPlaceholder()}focus(t){this._elementRef.nativeElement.focus(t)}_focusChanged(t){t!==this.focused&&(this.focused=t,this.stateChanges.next())}_onInput(){}_dirtyCheckNativeValue(){const t=this._elementRef.nativeElement.value;this._previousNativeValue!==t&&(this._previousNativeValue=t,this.stateChanges.next())}_dirtyCheckPlaceholder(){const t=this._getPlaceholder();if(t!==this._previousPlaceholder){const n=this._elementRef.nativeElement;this._previousPlaceholder=t,t?n.setAttribute("placeholder",t):n.removeAttribute("placeholder")}}_getPlaceholder(){return this.placeholder||null}_validateType(){if(F.indexOf(this._type)>-1&&(typeof ngDevMode>"u"||ngDevMode))throw M(this._type)}_isNeverEmpty(){return this._neverEmptyInputTypes.indexOf(this._type)>-1}_isBadInput(){let t=this._elementRef.nativeElement.validity;return t&&t.badInput}get empty(){return!this._isNeverEmpty()&&!this._elementRef.nativeElement.value&&!this._isBadInput()&&!this.autofilled}get shouldLabelFloat(){if(this._isNativeSelect){const t=this._elementRef.nativeElement,n=t.options[0];return this.focused||t.multiple||!this.empty||!!(t.selectedIndex>-1&&n&&n.label)}else return this.focused||!this.empty}setDescribedByIds(t){t.length?this._elementRef.nativeElement.setAttribute("aria-describedby",t.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focused||this.focus()}_isInlineSelect(){const t=this._elementRef.nativeElement;return this._isNativeSelect&&(t.multiple||t.size>1)}static#e=this.\u0275fac=function(n){return new(n||a)(e.\u0275\u0275directiveInject(e.ElementRef),e.\u0275\u0275directiveInject(p.Platform),e.\u0275\u0275directiveInject(l.NgControl,10),e.\u0275\u0275directiveInject(l.NgForm,8),e.\u0275\u0275directiveInject(l.FormGroupDirective,8),e.\u0275\u0275directiveInject(o.ErrorStateMatcher),e.\u0275\u0275directiveInject(m,10),e.\u0275\u0275directiveInject(h.AutofillMonitor),e.\u0275\u0275directiveInject(e.NgZone),e.\u0275\u0275directiveInject(s.MAT_FORM_FIELD,8))};static#t=this.\u0275dir=e.\u0275\u0275defineDirective({type:a,selectors:[["input","matInput",""],["textarea","matInput",""],["select","matNativeControl",""],["input","matNativeControl",""],["textarea","matNativeControl",""]],hostAttrs:[1,"mat-mdc-input-element"],hostVars:18,hostBindings:function(n,i){n&1&&e.\u0275\u0275listener("focus",function(){return i._focusChanged(!0)})("blur",function(){return i._focusChanged(!1)})("input",function(){return i._onInput()}),n&2&&(e.\u0275\u0275hostProperty("id",i.id)("disabled",i.disabled)("required",i.required),e.\u0275\u0275attribute("name",i.name||null)("readonly",i.readonly&&!i._isNativeSelect||null)("aria-invalid",i.empty&&i.required?null:i.errorState)("aria-required",i.required)("id",i.id),e.\u0275\u0275classProp("mat-input-server",i._isServer)("mat-mdc-form-field-textarea-control",i._isInFormField&&i._isTextarea)("mat-mdc-form-field-input-control",i._isInFormField)("mdc-text-field__input",i._isInFormField)("mat-mdc-native-select-inline",i._isInlineSelect()))},inputs:{disabled:"disabled",id:"id",placeholder:"placeholder",name:"name",required:"required",type:"type",errorStateMatcher:"errorStateMatcher",userAriaDescribedBy:[e.\u0275\u0275InputFlags.None,"aria-describedby","userAriaDescribedBy"],value:"value",readonly:"readonly"},exportAs:["matInput"],features:[e.\u0275\u0275ProvidersFeature([{provide:s.MatFormFieldControl,useExisting:a}]),e.\u0275\u0275InheritDefinitionFeature,e.\u0275\u0275NgOnChangesFeature]})}(typeof ngDevMode>"u"||ngDevMode)&&e.\u0275setClassMetadata(a,[{type:e.Directive,args:[{selector:`input[matInput], textarea[matInput], select[matNativeControl],
      input[matNativeControl], textarea[matNativeControl]`,exportAs:"matInput",host:{class:"mat-mdc-input-element","[class.mat-input-server]":"_isServer","[class.mat-mdc-form-field-textarea-control]":"_isInFormField && _isTextarea","[class.mat-mdc-form-field-input-control]":"_isInFormField","[class.mdc-text-field__input]":"_isInFormField","[class.mat-mdc-native-select-inline]":"_isInlineSelect()","[id]":"id","[disabled]":"disabled","[required]":"required","[attr.name]":"name || null","[attr.readonly]":"readonly && !_isNativeSelect || null","[attr.aria-invalid]":"(empty && required) ? null : errorState","[attr.aria-required]":"required","[attr.id]":"id","(focus)":"_focusChanged(true)","(blur)":"_focusChanged(false)","(input)":"_onInput()"},providers:[{provide:s.MatFormFieldControl,useExisting:a}]}]}],function(){return[{type:e.ElementRef},{type:p.Platform},{type:l.NgControl,decorators:[{type:e.Optional},{type:e.Self}]},{type:l.NgForm,decorators:[{type:e.Optional}]},{type:l.FormGroupDirective,decorators:[{type:e.Optional}]},{type:o.ErrorStateMatcher},{type:void 0,decorators:[{type:e.Optional},{type:e.Self},{type:e.Inject,args:[m]}]},{type:h.AutofillMonitor},{type:e.NgZone},{type:s.MatFormField,decorators:[{type:e.Optional},{type:e.Inject,args:[s.MAT_FORM_FIELD]}]}]},{disabled:[{type:e.Input}],id:[{type:e.Input}],placeholder:[{type:e.Input}],name:[{type:e.Input}],required:[{type:e.Input}],type:[{type:e.Input}],errorStateMatcher:[{type:e.Input}],userAriaDescribedBy:[{type:e.Input,args:["aria-describedby"]}],value:[{type:e.Input}],readonly:[{type:e.Input}]});class d{static#e=this.\u0275fac=function(n){return new(n||d)};static#t=this.\u0275mod=e.\u0275\u0275defineNgModule({type:d});static#i=this.\u0275inj=e.\u0275\u0275defineInjector({imports:[o.MatCommonModule,s.MatFormFieldModule,s.MatFormFieldModule,h.TextFieldModule,o.MatCommonModule]})}(typeof ngDevMode>"u"||ngDevMode)&&e.\u0275setClassMetadata(d,[{type:e.NgModule,args:[{imports:[o.MatCommonModule,s.MatFormFieldModule],exports:[a,s.MatFormFieldModule,h.TextFieldModule,o.MatCommonModule],declarations:[a]}]}],null,null)}}]);
