namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DeleteUseNewShellForExternalUsersSysSettingISESchema

	/// <exclude/>
	public class DeleteUseNewShellForExternalUsersSysSettingISESchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DeleteUseNewShellForExternalUsersSysSettingISESchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DeleteUseNewShellForExternalUsersSysSettingISESchema(DeleteUseNewShellForExternalUsersSysSettingISESchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("70971a22-b23e-45c6-acf1-7413c970704d");
			Name = "DeleteUseNewShellForExternalUsersSysSettingISE";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d2c3f70d-d3a5-4d15-9bc6-62f67312edb1");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,84,91,79,219,48,20,126,14,18,255,193,202,83,34,145,168,20,218,174,227,34,53,151,162,188,176,105,25,219,227,100,146,3,68,114,236,206,118,128,10,241,223,57,113,26,210,6,90,198,30,154,202,199,246,119,59,39,225,180,4,181,160,25,144,159,32,37,85,226,70,251,161,224,55,197,109,37,169,46,4,223,223,123,218,223,179,42,85,240,91,146,46,149,134,242,228,117,189,126,165,44,5,127,127,71,194,182,186,31,5,184,133,155,139,234,154,21,25,201,24,85,138,68,192,64,195,149,130,75,120,72,239,128,177,185,144,241,163,6,201,41,195,170,84,40,35,5,173,17,47,73,99,242,149,36,9,87,154,50,150,102,178,88,232,248,17,178,74,11,137,176,79,6,220,90,200,226,158,106,32,18,104,46,56,91,146,139,170,200,201,159,170,99,72,114,114,102,170,254,119,42,21,56,118,28,13,130,105,24,13,188,96,22,205,188,227,104,58,247,130,241,48,244,226,193,120,48,30,13,135,211,47,163,145,237,158,236,64,71,61,27,162,123,4,147,225,32,152,76,14,17,113,50,155,120,199,243,163,67,111,26,206,3,111,52,12,163,225,97,120,52,57,154,206,13,129,161,104,226,185,23,8,220,216,3,167,6,197,70,113,200,234,46,145,106,99,233,146,186,105,150,117,79,37,81,42,20,57,32,189,189,35,82,251,164,59,143,241,103,26,207,115,120,32,169,89,56,61,116,127,46,69,233,216,93,31,148,237,98,67,89,85,114,199,78,114,92,252,190,3,137,46,107,102,219,53,208,150,159,168,248,111,69,153,211,28,172,131,192,217,67,13,78,163,208,117,9,85,43,194,53,53,202,244,166,17,229,175,204,167,25,101,84,158,214,121,158,59,109,72,86,113,67,156,250,56,18,93,10,29,151,11,189,116,220,54,137,53,107,223,88,254,139,178,10,62,105,209,220,105,205,88,175,118,3,33,24,80,222,219,93,249,95,187,94,199,178,218,221,25,69,146,191,13,194,218,20,222,198,240,3,39,14,239,56,210,252,187,228,236,188,53,107,220,138,206,103,115,194,191,0,221,48,154,250,233,53,74,63,239,59,88,49,90,117,52,87,139,28,39,187,23,205,1,217,158,138,229,99,189,135,120,64,222,184,108,149,185,221,189,247,3,219,30,212,230,219,219,1,89,254,140,231,6,103,150,151,5,191,226,133,254,0,168,255,162,186,110,155,175,211,134,241,252,58,99,38,150,230,3,245,207,19,179,123,24,62,154,133,13,49,159,215,208,209,255,47,103,237,191,126,214,15,252,61,191,0,221,174,189,174,50,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("70971a22-b23e-45c6-acf1-7413c970704d"));
		}

		#endregion

	}

	#endregion

}

