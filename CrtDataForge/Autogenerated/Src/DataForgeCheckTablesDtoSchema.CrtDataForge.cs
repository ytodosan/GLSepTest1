namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DataForgeCheckTablesDtoSchema

	/// <exclude/>
	public class DataForgeCheckTablesDtoSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DataForgeCheckTablesDtoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DataForgeCheckTablesDtoSchema(DataForgeCheckTablesDtoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8ca75412-7995-4f62-b39c-a57d0b7b4aed");
			Name = "DataForgeCheckTablesDto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("18d347b6-8c17-4213-92f4-7f5294bb1a8f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,197,84,193,110,219,48,12,61,183,64,255,129,104,47,219,197,185,55,221,14,205,176,94,150,173,72,114,27,118,144,101,218,17,102,75,158,36,15,200,138,254,251,72,201,118,156,217,64,221,174,195,142,162,31,201,247,248,104,106,81,161,171,133,68,216,161,181,194,153,220,39,43,163,115,85,52,86,120,101,116,242,65,120,241,209,216,2,47,206,31,46,206,207,26,167,116,1,219,131,243,88,45,255,120,83,102,89,162,228,52,151,220,161,70,171,228,8,179,105,180,87,21,38,91,250,42,74,245,43,116,57,162,134,52,108,64,253,84,18,215,38,195,146,120,121,43,164,39,48,193,175,44,22,148,9,171,82,56,119,13,61,205,213,30,229,247,157,72,75,116,27,252,209,160,243,183,38,59,132,148,197,98,1,55,174,169,42,97,15,239,219,247,6,107,139,14,181,119,224,247,8,54,166,64,74,57,144,27,11,146,203,49,177,140,26,128,243,182,145,190,161,12,200,173,169,66,10,119,134,208,26,92,100,155,116,189,22,131,102,95,25,215,73,248,198,129,126,2,196,149,3,117,147,150,74,130,100,65,79,235,57,99,55,250,41,220,91,83,163,245,10,105,20,247,161,78,80,60,146,28,2,119,72,106,73,155,195,86,117,169,72,178,201,193,115,155,145,82,111,32,197,56,8,204,146,190,234,80,92,84,183,198,42,69,251,230,51,237,20,188,131,203,80,109,235,133,71,119,249,150,5,118,10,63,81,187,155,32,105,219,150,128,221,17,11,15,80,160,95,50,187,37,60,70,25,87,168,179,168,148,94,49,54,12,141,215,97,88,125,174,247,189,100,16,58,131,10,189,8,147,160,185,136,48,147,84,56,140,35,122,13,131,79,25,178,155,175,231,167,102,7,216,207,253,128,240,76,215,56,247,212,46,154,11,255,0,1,48,225,205,60,74,97,125,8,117,66,11,28,133,43,241,12,118,93,153,73,134,171,174,199,139,89,146,51,30,42,147,169,92,97,198,166,227,95,242,237,106,125,209,147,140,215,253,231,167,182,126,230,222,79,159,13,87,211,69,198,249,55,48,226,227,17,148,180,209,66,105,102,59,62,21,188,44,255,233,20,182,28,175,225,150,126,203,163,196,127,119,22,131,214,231,158,63,126,76,93,191,232,127,123,247,2,232,133,11,240,248,27,190,22,26,14,194,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8ca75412-7995-4f62-b39c-a57d0b7b4aed"));
		}

		#endregion

	}

	#endregion

}

