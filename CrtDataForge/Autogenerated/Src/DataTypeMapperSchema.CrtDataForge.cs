namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DataTypeMapperSchema

	/// <exclude/>
	public class DataTypeMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DataTypeMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DataTypeMapperSchema(DataTypeMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5272e652-db6b-4d75-8b6f-1f5214d71cc0");
			Name = "DataTypeMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("18d347b6-8c17-4213-92f4-7f5294bb1a8f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,86,223,107,227,70,16,126,246,193,253,15,139,10,119,54,24,153,94,239,161,228,146,148,94,238,146,6,226,35,61,155,246,161,148,178,150,70,210,82,105,87,183,63,146,232,130,255,247,155,217,149,34,71,150,77,161,79,133,130,65,214,206,206,55,223,124,51,179,43,201,43,48,53,79,128,173,65,107,110,84,102,227,11,37,51,145,59,205,173,80,50,254,192,45,191,84,58,135,151,47,30,95,190,152,56,35,100,206,86,141,177,80,189,27,188,163,103,89,66,66,110,38,190,2,9,90,36,253,158,221,0,26,226,143,210,10,43,192,28,220,112,201,19,171,116,216,129,123,190,211,144,35,48,187,150,22,116,134,140,79,216,53,113,91,55,53,44,121,93,131,246,219,22,139,5,59,53,174,170,184,110,206,219,247,91,173,238,68,10,134,101,78,122,118,188,20,182,97,86,177,138,215,12,136,72,195,76,82,64,197,89,162,74,87,73,150,34,50,179,8,109,104,91,162,180,70,153,148,76,125,178,191,222,180,38,165,241,39,114,129,128,126,133,73,146,51,238,104,44,118,120,212,110,83,138,132,137,142,253,62,249,9,201,187,199,223,47,224,22,195,184,28,165,250,218,244,100,137,43,8,91,128,102,194,154,17,110,196,152,31,72,39,126,10,191,24,198,63,173,185,230,149,71,56,139,66,216,232,124,93,192,184,118,173,174,72,99,135,89,166,116,124,186,240,56,227,176,86,55,152,230,234,75,73,154,152,232,252,26,217,37,220,162,202,247,5,248,148,16,151,91,108,179,218,18,126,77,220,113,137,232,247,213,218,143,161,193,58,45,141,167,75,110,144,238,176,226,40,43,51,86,35,214,188,83,142,120,119,154,140,87,24,131,116,168,20,38,248,83,145,186,146,78,125,115,55,43,47,203,69,80,37,136,51,103,27,165,16,234,89,178,51,154,129,109,232,114,144,105,104,244,103,77,127,81,114,99,78,216,72,191,255,241,1,50,238,74,251,94,248,106,78,137,164,202,166,131,238,154,205,254,196,189,190,249,40,147,132,224,6,104,108,100,158,66,75,118,36,46,5,148,41,178,184,213,226,14,11,227,195,79,234,240,194,52,240,84,201,178,65,16,17,102,76,55,167,157,178,225,121,206,254,50,33,227,101,91,190,51,38,225,158,29,113,240,241,39,143,209,103,145,20,107,120,176,209,156,69,242,142,235,164,224,58,218,206,91,235,170,80,218,30,54,95,138,18,200,130,134,141,160,48,189,233,119,216,28,242,91,44,30,163,27,165,254,118,53,89,219,127,79,142,107,81,121,76,75,207,167,213,219,66,73,232,0,67,14,189,241,186,226,57,244,136,78,138,47,14,240,88,194,86,201,4,236,240,165,19,46,199,5,220,132,21,219,201,163,84,220,126,79,203,41,36,162,226,101,111,194,194,65,71,9,187,27,136,214,155,231,230,206,52,192,251,113,20,207,115,61,160,217,146,63,172,196,87,56,172,247,251,224,48,238,125,164,76,68,231,135,17,58,84,137,43,39,210,99,170,209,158,223,120,233,224,70,24,143,223,191,244,188,112,242,128,75,178,110,196,80,215,55,163,58,44,177,158,205,168,197,59,189,29,119,130,84,184,234,112,162,191,112,115,164,153,241,184,80,122,220,116,163,100,126,100,10,32,113,122,164,44,100,222,134,59,116,120,188,60,141,246,18,79,88,229,103,219,95,83,193,248,255,85,244,159,187,138,218,175,140,127,127,35,181,39,175,200,216,180,149,242,12,15,107,87,150,157,101,98,11,173,238,253,249,253,179,206,93,133,242,127,66,243,199,135,4,106,58,205,167,196,14,47,162,224,61,243,87,220,100,178,29,160,250,175,75,63,170,20,246,31,196,232,241,163,54,139,231,8,149,51,150,73,101,217,6,60,84,140,179,112,136,137,127,182,82,117,202,18,200,39,234,206,51,54,198,48,38,91,0,8,178,15,116,99,175,94,13,47,185,120,173,155,43,176,30,98,58,12,51,103,202,217,174,92,161,37,200,52,11,233,255,180,179,20,86,78,246,136,122,50,219,253,233,30,249,158,216,126,3,163,174,72,36,237,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5272e652-db6b-4d75-8b6f-1f5214d71cc0"));
		}

		#endregion

	}

	#endregion

}

