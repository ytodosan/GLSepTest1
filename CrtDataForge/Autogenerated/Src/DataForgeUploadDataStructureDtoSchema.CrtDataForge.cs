namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DataForgeUploadDataStructureDtoSchema

	/// <exclude/>
	public class DataForgeUploadDataStructureDtoSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DataForgeUploadDataStructureDtoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DataForgeUploadDataStructureDtoSchema(DataForgeUploadDataStructureDtoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("89efef53-404f-45a4-ad36-84f968554a82");
			Name = "DataForgeUploadDataStructureDto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("18d347b6-8c17-4213-92f4-7f5294bb1a8f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,221,86,91,79,219,48,20,126,14,210,254,131,213,237,161,149,80,250,206,165,210,86,52,52,9,6,42,221,211,196,131,155,156,22,107,137,29,108,103,83,87,241,223,119,236,92,154,180,6,154,52,101,18,47,148,28,159,203,119,110,159,205,105,12,42,161,1,144,41,72,73,149,152,107,127,44,248,156,45,82,73,53,19,220,191,160,154,126,21,114,1,31,142,86,31,142,188,84,49,190,32,119,75,165,33,62,221,248,70,203,40,130,192,152,41,255,18,56,72,22,108,233,92,49,254,184,37,156,164,92,179,24,252,59,52,161,17,251,107,67,163,22,234,125,148,176,192,15,50,142,168,82,39,164,132,243,141,51,109,117,193,136,238,180,76,3,157,74,152,192,99,10,74,127,17,225,210,154,15,135,67,114,166,210,56,166,114,57,202,191,39,144,72,80,192,181,34,250,1,136,204,76,200,12,109,200,92,72,146,38,145,160,161,129,23,162,107,162,10,223,168,46,172,133,137,72,44,10,162,64,254,102,1,248,69,168,97,37,214,79,163,135,213,212,146,6,250,222,8,202,252,102,17,24,65,146,206,34,22,144,192,228,214,44,53,111,101,211,91,151,7,107,110,21,133,196,42,221,90,191,153,70,30,163,129,247,254,21,83,250,108,106,64,94,192,156,25,125,193,71,68,215,5,106,64,204,64,120,158,85,84,228,124,75,193,180,217,123,202,113,2,15,51,168,117,220,183,82,36,32,53,131,13,212,155,125,179,130,75,192,150,97,131,20,228,173,139,16,40,17,243,44,178,171,91,51,200,187,9,161,95,186,173,246,40,107,210,53,196,51,144,253,239,184,13,152,71,207,186,83,189,193,125,165,126,238,154,228,185,175,200,2,244,41,113,228,154,231,191,145,254,115,67,253,35,193,28,222,223,64,191,150,86,251,97,126,217,115,87,131,108,79,61,100,39,195,110,125,29,146,243,81,38,242,56,252,89,131,249,156,176,91,170,131,135,27,156,104,203,96,91,161,251,185,153,87,218,212,13,166,203,4,124,236,102,132,140,124,92,232,126,234,13,45,160,225,74,135,190,25,209,167,94,121,166,195,193,32,71,55,21,38,219,254,224,253,109,93,131,2,239,176,145,59,237,100,117,194,76,34,214,235,129,118,18,171,135,63,88,73,87,61,223,108,67,95,201,114,115,69,247,155,160,67,76,78,125,112,54,6,35,251,46,166,66,237,51,26,39,185,239,42,231,236,58,5,235,182,82,30,146,24,52,181,53,192,93,162,182,26,51,170,242,226,116,209,221,141,26,116,221,68,110,170,111,104,224,161,130,121,199,142,25,219,122,195,176,52,102,25,172,130,163,77,187,65,10,153,66,238,92,146,128,38,182,235,45,209,229,230,78,128,227,220,117,123,140,160,2,201,246,194,87,113,225,196,120,81,9,209,26,103,240,0,193,47,212,170,129,36,10,197,49,109,82,203,220,141,187,152,69,140,214,40,113,208,53,137,69,200,230,12,66,179,67,176,39,222,194,215,141,187,180,215,229,241,30,152,243,251,51,16,81,26,115,28,136,242,161,97,111,134,86,19,107,93,185,46,207,177,61,169,177,213,136,100,66,213,17,31,58,66,116,65,136,89,3,179,204,186,160,67,39,204,195,81,226,26,248,127,230,68,83,80,141,15,203,214,192,140,177,19,152,121,174,118,78,214,141,225,189,53,91,55,6,248,38,116,189,117,27,227,127,84,227,31,166,10,162,145,48,7,105,158,89,199,132,225,130,241,101,131,28,50,219,169,112,188,178,38,230,8,120,80,127,18,145,73,110,209,229,163,203,29,106,23,178,161,89,246,198,214,188,51,11,118,49,172,195,204,177,82,34,96,120,123,132,29,18,206,139,144,15,71,60,101,162,97,227,107,196,241,144,46,86,253,185,247,243,94,248,118,93,37,215,102,103,51,221,110,184,80,246,15,32,189,37,210,250,20,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("89efef53-404f-45a4-ad36-84f968554a82"));
		}

		#endregion

	}

	#endregion

}

