namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DataForgeCheckLookupsDtoSchema

	/// <exclude/>
	public class DataForgeCheckLookupsDtoSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DataForgeCheckLookupsDtoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DataForgeCheckLookupsDtoSchema(DataForgeCheckLookupsDtoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f491ac1a-2e59-4225-8408-6fa86c95e243");
			Name = "DataForgeCheckLookupsDto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("08c4faf5-b0b9-4f2f-8882-6a2d4b4ee8d8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,181,85,77,111,219,48,12,61,183,64,255,3,209,94,54,96,112,238,77,183,67,83,44,8,208,108,69,178,245,82,236,32,75,116,34,212,150,60,125,164,200,138,253,247,81,146,157,239,0,105,154,29,69,145,212,123,212,35,169,88,133,182,102,28,225,7,26,195,172,46,92,214,211,170,144,19,111,152,147,90,101,119,204,177,175,218,76,240,226,252,245,226,252,204,91,169,38,48,158,91,135,85,119,227,76,145,101,137,60,132,217,172,143,10,141,228,91,62,35,175,156,172,48,27,211,45,43,229,159,248,202,210,107,21,134,137,94,51,201,113,168,5,150,132,203,25,198,29,57,147,251,149,193,9,69,66,175,100,214,94,195,2,102,111,138,252,249,94,235,103,95,219,17,254,246,104,221,173,22,243,24,211,233,116,224,198,250,170,98,102,254,165,57,143,176,54,104,81,57,11,110,138,96,82,8,228,20,3,133,54,192,67,190,128,172,140,57,65,208,67,48,147,44,122,135,87,33,62,11,54,33,205,218,103,58,43,239,60,5,191,22,254,175,96,88,176,207,75,12,134,218,231,165,228,192,3,153,3,184,156,133,175,88,148,224,193,232,26,141,147,72,117,120,136,137,34,219,45,186,209,208,71,98,74,188,44,54,140,249,226,211,64,23,45,203,20,69,25,193,105,200,49,85,1,69,182,72,187,74,47,241,27,98,149,163,249,240,141,20,5,159,225,50,37,178,151,31,3,189,150,223,189,180,238,38,17,26,55,241,208,240,131,87,152,160,235,6,92,93,248,251,110,2,51,86,82,185,78,198,227,49,166,219,75,38,94,111,48,74,33,187,104,93,161,18,233,235,232,148,108,171,166,109,113,175,85,236,16,37,55,55,32,21,73,184,138,45,6,44,215,222,1,107,10,244,137,238,120,233,69,80,182,117,198,115,231,13,2,83,2,42,45,100,33,121,10,170,208,177,160,248,83,200,122,131,197,41,53,236,149,164,238,0,41,136,61,129,71,19,148,16,46,18,217,55,124,183,20,235,159,220,247,82,192,64,28,175,206,189,208,90,133,146,36,43,6,84,32,205,37,115,40,224,69,186,233,113,224,83,202,113,204,248,115,176,139,201,227,186,199,59,154,46,52,18,121,173,23,250,112,168,109,252,58,70,82,98,16,100,175,77,126,52,60,18,156,91,87,50,169,24,143,5,155,18,161,248,174,118,194,29,46,174,79,210,237,123,198,191,173,105,173,226,225,123,44,249,67,97,116,181,103,87,209,228,84,142,73,21,56,196,178,208,64,91,25,161,131,187,144,138,185,184,19,37,77,7,95,135,34,198,66,191,160,137,10,150,193,34,254,227,210,107,88,92,195,45,179,184,44,194,41,135,199,14,218,6,105,28,42,234,197,124,190,84,251,155,151,198,64,236,218,24,161,15,219,29,65,30,71,72,134,44,255,0,181,156,101,171,184,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f491ac1a-2e59-4225-8408-6fa86c95e243"));
		}

		#endregion

	}

	#endregion

}

