namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: MacrosValueFormatterSchema

	/// <exclude/>
	public class MacrosValueFormatterSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MacrosValueFormatterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MacrosValueFormatterSchema(MacrosValueFormatterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9e7e89dd-f5d2-4d34-a996-84b7bea8bd6f");
			Name = "MacrosValueFormatter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d9c4378b-4458-41ff-9d84-e4b071fcce18");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,85,77,111,219,56,16,61,171,64,255,195,84,11,20,22,96,200,61,183,177,123,176,179,129,15,73,3,196,221,61,211,242,216,97,65,145,2,73,185,240,166,253,239,203,15,81,166,100,185,81,23,123,17,68,114,222,204,227,204,240,13,39,37,170,138,20,8,27,148,146,40,177,215,249,82,240,61,61,212,146,104,42,120,254,85,83,166,222,190,121,121,251,38,169,21,229,7,120,58,41,141,229,167,222,58,191,99,98,75,24,253,199,161,206,167,177,219,178,188,118,34,241,218,126,126,203,53,213,20,149,49,48,38,127,72,60,24,255,176,100,68,169,143,112,79,10,41,212,95,132,213,248,167,144,37,209,26,165,179,155,205,102,112,163,234,178,36,242,180,104,214,43,84,133,164,91,84,128,214,231,9,10,193,234,146,195,209,194,97,31,240,121,128,207,34,124,85,111,25,45,160,176,97,175,68,77,94,92,228,51,69,193,149,150,117,161,133,52,76,31,157,3,111,209,39,231,54,34,115,203,197,24,32,66,33,113,63,79,135,226,165,179,69,222,250,154,245,157,221,84,68,146,18,184,169,238,60,173,21,74,227,157,99,97,75,147,46,214,38,16,225,166,228,98,31,71,249,218,53,51,254,111,102,206,141,243,218,36,96,136,202,164,139,132,110,188,12,108,235,36,73,207,104,222,51,179,245,79,126,54,25,68,190,243,73,236,102,244,81,138,10,165,109,134,49,249,172,165,52,117,118,97,76,165,67,156,43,73,107,174,215,35,217,91,190,192,1,245,39,80,246,243,10,213,123,212,207,98,103,121,74,122,36,26,253,105,229,23,96,10,109,59,221,103,208,165,212,101,116,226,122,253,180,116,109,233,118,124,111,78,205,101,152,174,37,174,249,94,64,225,255,67,94,143,68,54,141,188,34,154,56,212,230,84,161,73,176,195,230,222,91,222,57,116,201,78,232,30,38,239,6,160,249,90,61,212,37,74,147,143,247,239,225,138,133,89,227,134,150,45,141,68,162,97,197,225,14,245,147,187,157,191,145,227,144,249,120,63,91,190,110,119,35,252,253,91,166,14,145,111,132,199,79,178,51,75,202,117,190,145,167,71,34,85,227,50,128,167,32,106,13,62,7,252,104,154,3,119,107,174,241,128,50,107,153,245,163,245,45,207,33,211,135,15,233,180,77,112,195,26,144,41,4,75,99,135,5,45,9,27,79,101,229,1,153,201,163,167,146,36,67,217,124,48,207,20,230,115,72,239,5,199,83,250,58,241,85,32,210,18,191,251,37,111,97,186,27,127,131,182,179,31,145,192,85,227,120,28,141,208,50,191,65,36,52,217,8,42,173,243,64,166,199,195,125,155,38,237,120,137,149,39,60,208,173,16,12,214,234,182,172,244,201,55,178,216,126,51,42,224,145,129,77,236,205,214,143,215,140,193,143,31,224,239,5,84,133,135,110,158,145,255,115,79,139,177,47,242,239,103,170,241,201,14,222,201,196,31,101,222,117,54,70,8,207,234,242,154,10,174,112,79,76,30,128,150,21,195,210,232,161,27,207,86,249,127,49,3,45,229,239,84,63,135,82,142,29,52,197,89,184,210,197,109,236,63,158,36,151,48,31,101,41,118,6,214,40,157,193,237,240,2,229,19,174,22,97,244,236,160,116,243,200,211,191,153,133,243,72,209,143,84,234,154,176,80,9,35,79,45,56,214,169,75,229,141,46,51,13,232,136,105,175,7,162,147,161,26,103,240,185,175,140,145,255,204,247,246,199,203,129,208,33,193,241,123,60,8,38,49,155,78,219,252,175,157,240,159,138,191,140,124,93,173,226,200,122,141,46,211,229,68,116,2,209,158,55,163,240,60,86,58,15,60,54,244,238,250,163,173,121,194,14,19,139,138,117,213,196,123,215,136,128,121,240,197,192,220,181,146,16,132,170,115,208,15,53,4,206,77,46,252,13,86,84,85,140,116,120,79,225,146,255,128,240,45,189,92,70,34,57,140,26,214,31,191,219,221,52,123,255,2,119,137,51,163,68,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9e7e89dd-f5d2-4d34-a996-84b7bea8bd6f"));
		}

		#endregion

	}

	#endregion

}

