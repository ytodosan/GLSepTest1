(self.webpackChunkapp_studio_enterprise_omnichannel_messaging=self.webpackChunkapp_studio_enterprise_omnichannel_messaging||[]).push([[5168,3308,2787],{32787:(K,k,_)=>{_.r(k),_.d(k,{CONFIG_TOKEN:()=>q,DBMode:()=>g,NgxIndexedDBModule:()=>P,NgxIndexedDBService:()=>I});var y=_(73308),v=_(59131),w=_(40297),u=_(62278),M=_(36486);function l(b,e,r,t){return new Promise((n,o)=>{b||o("IndexedDB not available");const i=b.open(e,r);let s;i.onsuccess=c=>{s=i.result,n(s)},i.onerror=c=>{o(`IndexedDB error: ${i.error}`)},typeof t=="function"&&(i.onupgradeneeded=c=>{t(c,s)})})}function S(b,e,r,t,n){return C.apply(this,arguments)}function C(){return C=(0,y.A)(function*(b,e,r,t,n){return new Promise((o,i)=>{if(!b)return;const s=b.open(e,r);s.onupgradeneeded=function(){var c=(0,y.A)(function*(d){const a=d.target.result,m=t.map(function(){var D=(0,y.A)(function*(j){if(!a.objectStoreNames.contains(j.store)){const E=a.createObjectStore(j.store,j.storeConfig);for(const A of j.storeSchema)E.createIndex(A.name,A.keypath,A.options)}});return function(j){return D.apply(this,arguments)}}());yield Promise.all(m);const h=n&&n();if(h){const D=Object.keys(h).map(j=>parseInt(j,10)).filter(j=>j>d.oldVersion).sort((j,E)=>j-E);for(const j of D)h[j](a,s.transaction)}a.close(),o()});return function(d){return c.apply(this,arguments)}}(),s.onsuccess=c=>{c.target.result.close(),o()},s.onerror=c=>{i(c)}})}),C.apply(this,arguments)}function B(b,e,r){if(!b||!e||!r)throw Error('Params: "dbName", "version", "storeName" are mandatory.');return new u.Observable(t=>{try{const n=e+1,o=indexedDB.open(b,n);o.onupgradeneeded=i=>{const s=i.target.result;s.deleteObjectStore(r),s.close(),console.log("onupgradeneeded"),t.next(!0),t.complete()},o.onerror=i=>t.error(i)}catch(n){t.error(n)}})}function O(b,e){return b.objectStoreNames.contains(e)}function f(b,e,r){b||r("You need to use the openDatabase function to create a database before you query it!"),O(b,e)||r(`objectStore does not exists: ${e}`)}function p(b,e){const r=b.transaction(e.storeName,e.dbMode);return r.onerror=e.error,r.onabort=e.abort,r}function x(b,e,r,t){return{storeName:e,dbMode:b,error:n=>{r(n)},abort:n=>{r(n)}}}var g;(function(b){b.readonly="readonly",b.readwrite="readwrite"})(g||(g={}));const q=new v.InjectionToken(null);class I{constructor(e,r){if(this.dbConfigs=e,this.platformId=r,this.defaultDatabaseName=null,this.isBrowser=(0,w.isPlatformBrowser)(this.platformId),this.isBrowser){this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;const t=Object.values(this.dbConfigs),n=t.length===1;for(const o of t)this.instanciateConfig(o,n)}}instanciateConfig(e,r){var t=this;return(0,y.A)(function*(){if(!e.name)throw new Error("NgxIndexedDB: Please, provide the dbName in the configuration");if(!e.version)throw new Error("NgxIndexedDB: Please, provide the db version in the configuration");if((e.isDefault??!1)&&t.defaultDatabaseName)throw new Error("NgxIndexedDB: Only one database can be set as default");((e.isDefault??!1)&&!t.defaultDatabaseName||r)&&(t.defaultDatabaseName=e.name,t.selectedDb=e.name),yield S(t.indexedDB,e.name,e.version,e.objectStoresMeta,e.migrationFactory),l(t.indexedDB,e.name).then(n=>{n.version!==e.version&&(t.dbConfigs[e.name].version=n.version)})})()}get dbConfig(){return this.dbConfigs[this.selectedDb]}getDatabaseVersion(){return new u.Observable(e=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{e.next(r.version),e.complete()}).catch(r=>e.error(`error during get version of database => ${r} `))})}selectDb(e){if(e=e??this.defaultDatabaseName,!e)throw new Error("No database name specified and no default database set.");if(!Object.keys(this.dbConfigs).includes(e))throw new Error(`NgxIndexedDB: Database ${e} is not initialized.`);this.selectedDb=e}createObjectStore(e,r){var t=this;return(0,y.A)(function*(){const n=[e];yield S(t.indexedDB,t.dbConfig.name,++t.dbConfig.version,n,r)})()}add(e,r,t){return new u.Observable(n=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{const s=p(o,x(g.readwrite,e,d=>n.error(d))).objectStore(e),c=t?s.add(r,t):s.add(r);c.onsuccess=function(){var d=(0,y.A)(function*(a){const m=a.target.result,h=s.get(m);h.onsuccess=D=>{n.next(D.target.result),n.complete()},h.onerror=D=>{n.error(D)}});return function(a){return d.apply(this,arguments)}}(),c.onerror=d=>{n.error(d)}}).catch(o=>n.error(o))})}bulkAdd(e,r){const t=new Promise((n,o)=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{const c=p(i,x(g.readwrite,e,n,o)).objectStore(e),d=r.map(a=>new Promise((m,h)=>{const D=a.key;delete a.key;const j=D?c.add(a,D):c.add(a);j.onsuccess=E=>{const A=E.target.result;m(A)}}));n(Promise.all(d))}).catch(i=>o(i))});return(0,u.from)(t)}bulkDelete(e,r){const t=r.map(n=>new Promise((o,i)=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{const c=p(s,x(g.readwrite,e,i,o));c.objectStore(e).delete(n),c.oncomplete=()=>{this.getAll(e).pipe((0,M.take)(1)).subscribe(a=>{o(a)})}}).catch(s=>i(s))}));return(0,u.from)(Promise.all(t))}getByKey(e,r){return new u.Observable(t=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{const s=p(n,x(g.readonly,e,t.error)).objectStore(e).get(r);s.onsuccess=c=>{t.next(c.target.result),t.complete()},s.onerror=c=>{t.error(c)}}).catch(n=>t.error(n))})}bulkGet(e,r){const t=r.map(n=>this.getByKey(e,n));return new u.Observable(n=>{(0,u.combineLatest)(t).subscribe(o=>{n.next(o),n.complete()})})}getByID(e,r){return new u.Observable(t=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{f(n,e,c=>t.error(c));const s=p(n,x(g.readonly,e,t.error,t.next)).objectStore(e).get(r);s.onsuccess=c=>{t.next(c.target.result)}}).catch(n=>t.error(n))})}getByIndex(e,r,t){return new u.Observable(n=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{f(o,e,a=>n.error(a));const d=p(o,x(g.readonly,e,n.error)).objectStore(e).index(r).get(t);d.onsuccess=a=>{n.next(a.target.result),n.complete()}}).catch(o=>n.error(o))})}getAll(e){return new u.Observable(r=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{f(t,e,s=>r.error(s));const i=p(t,x(g.readonly,e,r.error,r.next)).objectStore(e).getAll();i.onerror=s=>{r.error(s)},i.onsuccess=({target:{result:s}})=>{r.next(s),r.complete()}}).catch(t=>r.error(t))})}update(e,r){return new u.Observable(t=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{f(n,e,c=>t.error(c));const i=p(n,x(g.readwrite,e,c=>t.error(c))).objectStore(e),s=i.put(r);s.onsuccess=function(){var c=(0,y.A)(function*(d){const a=d.target.result,m=i.get(a);m.onsuccess=h=>{t.next(h.target.result),t.complete()}});return function(d){return c.apply(this,arguments)}}()}).catch(n=>t.error(n))})}bulkPut(e,r){let t;return new u.Observable(n=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{f(o,e,s=>n.error(s)),t=p(o,x(g.readwrite,e,s=>n.error(s)));const i=t.objectStore(e);r.forEach((s,c)=>{const d=i.put(s);c===r.length-1&&(d.onsuccess=a=>{t.commit(),n.next(a.target.result),n.complete()}),d.onerror=a=>{t.abort(),n.error(a)}})}).catch(o=>{t?.abort(),n.error(o)})})}delete(e,r){return new u.Observable(t=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{f(n,e,s=>t.error(s));const o=p(n,x(g.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(r),o.oncomplete=()=>{this.getAll(e).pipe((0,M.take)(1)).subscribe(s=>{t.next(s),t.complete()})}}).catch(n=>t.error(n))})}deleteByKey(e,r){return new u.Observable(t=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{f(n,e,s=>t.error(s));const o=p(n,x(g.readwrite,e,s=>t.error(s))),i=o.objectStore(e);o.oncomplete=()=>{t.next(!0),t.complete()},i.delete(r)}).catch(n=>t.error(n))})}clear(e){return new u.Observable(r=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{f(t,e,i=>r.error(i));const n=p(t,x(g.readwrite,e,i=>r.error(i)));n.objectStore(e).clear(),n.oncomplete=()=>{r.next(!0),r.complete()}}).catch(t=>r.error(t))})}deleteDatabase(){var e=this;return new u.Observable(r=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(function(){var t=(0,y.A)(function*(n){yield n.close();const o=e.indexedDB.deleteDatabase(e.dbConfig.name);o.onsuccess=()=>{r.next(!0),r.complete()},o.onerror=i=>r.error(i),o.onblocked=()=>{throw new Error("Unable to delete database because it's blocked")}});return function(n){return t.apply(this,arguments)}}()).catch(t=>r.error(t))})}openCursor(e,r,t="next"){return new u.Observable(n=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{f(o,e,d=>n.error(d));const s=p(o,x(g.readonly,e,n.error)).objectStore(e),c=r===void 0?s.openCursor():s.openCursor(r,t);c.onsuccess=d=>{n.next(d),n.complete()}}).catch(o=>n.error(o))})}openCursorByIndex(e,r,t,n="next",o=g.readonly){const i=new u.Subject;return l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{f(s,e,h=>{i.error(h)});const m=p(s,x(o,e,h=>{i.error(h)},()=>{i.next()})).objectStore(e).index(r).openCursor(t,n);m.onsuccess=h=>{i.next(h)}}).catch(s=>i.error(s)),i}getAllByIndex(e,r,t){const n=[];return new u.Observable(o=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{f(i,e,m=>o.error(m));const a=p(i,x(g.readonly,e,o.error)).objectStore(e).index(r).openCursor(t);a.onsuccess=m=>{const h=m.target.result;h?(n.push(h.value),h.continue()):(o.next(n),o.complete())}}).catch(i=>o.error(i))})}getAllKeysByIndex(e,r,t){const n=[];return new u.Observable(o=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{f(i,e,m=>o.error(m));const a=p(i,x(g.readonly,e,o.error)).objectStore(e).index(r).openKeyCursor(t);a.onsuccess=m=>{const h=m.target.result;h?(n.push({primaryKey:h.primaryKey,key:h.key}),h.continue()):(o.next(n),o.complete())}}).catch(i=>o.error(i))})}count(e,r){return new u.Observable(t=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{f(n,e,c=>t.error(c));const s=p(n,x(g.readonly,e,t.error)).objectStore(e).count(r);s.onerror=c=>t.error(c),s.onsuccess=c=>{t.next(c.target.result),t.complete()}}).catch(n=>t.error(n))})}countByIndex(e,r,t){return new u.Observable(n=>{l(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{f(o,e,a=>n.error(a));const d=p(o,x(g.readonly,e,n.error)).objectStore(e).index(r).count(t);d.onerror=a=>n.error(a),d.onsuccess=a=>{n.next(a.target.result),n.complete()}}).catch(o=>n.error(o))})}deleteObjectStore(e){return B(this.dbConfig.name,++this.dbConfig.version,e)}static{this.\u0275fac=function(r){return new(r||I)(v.\u0275\u0275inject(q),v.\u0275\u0275inject(v.PLATFORM_ID))}}static{this.\u0275prov=v.\u0275\u0275defineInjectable({token:I,factory:I.\u0275fac})}}(typeof ngDevMode>"u"||ngDevMode)&&v.\u0275setClassMetadata(I,[{type:v.Injectable}],()=>[{type:void 0,decorators:[{type:v.Inject,args:[q]}]},{type:void 0,decorators:[{type:v.Inject,args:[v.PLATFORM_ID]}]}],null);class P{static forRoot(...e){const r={};for(const t of e)Object.assign(r,{[t.name]:t});return{ngModule:P,providers:[I,{provide:q,useValue:r}]}}static{this.\u0275fac=function(r){return new(r||P)}}static{this.\u0275mod=v.\u0275\u0275defineNgModule({type:P})}static{this.\u0275inj=v.\u0275\u0275defineInjector({imports:[w.CommonModule]})}}(typeof ngDevMode>"u"||ngDevMode)&&v.\u0275setClassMetadata(P,[{type:v.NgModule,args:[{declarations:[],imports:[w.CommonModule]}]}],null,null)},73308:(K,k,_)=>{_.d(k,{A:()=>v});function y(w,u,M,l,S,C,B){try{var O=w[C](B),f=O.value}catch(p){M(p);return}O.done?u(f):Promise.resolve(f).then(l,S)}function v(w){return function(){var u=this,M=arguments;return new Promise(function(l,S){var C=w.apply(u,M);function B(f){y(C,l,S,B,O,"next",f)}function O(f){y(C,l,S,B,O,"throw",f)}B(void 0)})}}}}]);
