(self.webpackChunkapp_studio_enterprise_relationship_diagram=self.webpackChunkapp_studio_enterprise_relationship_diagram||[]).push([[2787],{32787:(K,P,C)=>{C.r(P),C.d(P,{CONFIG_TOKEN:()=>O,DBMode:()=>f,NgxIndexedDBModule:()=>S,NgxIndexedDBService:()=>w});var y=C(73308),v=C(59131),I=C(40297),l=C(62278),E=C(36486);function h(g,e,n,t){return new Promise((r,o)=>{g||o("IndexedDB not available");const i=g.open(e,n);let s;i.onsuccess=c=>{s=i.result,r(s)},i.onerror=c=>{o(`IndexedDB error: ${i.error}`)},typeof t=="function"&&(i.onupgradeneeded=c=>{t(c,s)})})}function A(g,e,n,t,r){return M.apply(this,arguments)}function M(){return M=(0,y.A)(function*(g,e,n,t,r){return new Promise((o,i)=>{if(!g)return;const s=g.open(e,n);s.onupgradeneeded=function(){var c=(0,y.A)(function*(d){const a=d.target.result,x=t.map(function(){var D=(0,y.A)(function*(m){if(!a.objectStoreNames.contains(m.store)){const _=a.createObjectStore(m.store,m.storeConfig);for(const B of m.storeSchema)_.createIndex(B.name,B.keypath,B.options)}});return function(m){return D.apply(this,arguments)}}());yield Promise.all(x);const u=r&&r();if(u){const D=Object.keys(u).map(m=>parseInt(m,10)).filter(m=>m>d.oldVersion).sort((m,_)=>m-_);for(const m of D)u[m](a,s.transaction)}a.close(),o()});return function(d){return c.apply(this,arguments)}}(),s.onsuccess=c=>{c.target.result.close(),o()},s.onerror=c=>{i(c)}})}),M.apply(this,arguments)}function k(g,e,n){if(!g||!e||!n)throw Error('Params: "dbName", "version", "storeName" are mandatory.');return new l.Observable(t=>{try{const r=e+1,o=indexedDB.open(g,r);o.onupgradeneeded=i=>{const s=i.target.result;s.deleteObjectStore(n),s.close(),console.log("onupgradeneeded"),t.next(!0),t.complete()},o.onerror=i=>t.error(i)}catch(r){t.error(r)}})}function q(g,e){return g.objectStoreNames.contains(e)}function j(g,e,n){g||n("You need to use the openDatabase function to create a database before you query it!"),q(g,e)||n(`objectStore does not exists: ${e}`)}function b(g,e){const n=g.transaction(e.storeName,e.dbMode);return n.onerror=e.error,n.onabort=e.abort,n}function p(g,e,n,t){return{storeName:e,dbMode:g,error:r=>{n(r)},abort:r=>{n(r)}}}var f;(function(g){g.readonly="readonly",g.readwrite="readwrite"})(f||(f={}));const O=new v.InjectionToken(null);class w{constructor(e,n){if(this.dbConfigs=e,this.platformId=n,this.defaultDatabaseName=null,this.isBrowser=(0,I.isPlatformBrowser)(this.platformId),this.isBrowser){this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;const t=Object.values(this.dbConfigs),r=t.length===1;for(const o of t)this.instanciateConfig(o,r)}}instanciateConfig(e,n){var t=this;return(0,y.A)(function*(){if(!e.name)throw new Error("NgxIndexedDB: Please, provide the dbName in the configuration");if(!e.version)throw new Error("NgxIndexedDB: Please, provide the db version in the configuration");if((e.isDefault??!1)&&t.defaultDatabaseName)throw new Error("NgxIndexedDB: Only one database can be set as default");((e.isDefault??!1)&&!t.defaultDatabaseName||n)&&(t.defaultDatabaseName=e.name,t.selectedDb=e.name),yield A(t.indexedDB,e.name,e.version,e.objectStoresMeta,e.migrationFactory),h(t.indexedDB,e.name).then(r=>{r.version!==e.version&&(t.dbConfigs[e.name].version=r.version)})})()}get dbConfig(){return this.dbConfigs[this.selectedDb]}getDatabaseVersion(){return new l.Observable(e=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{e.next(n.version),e.complete()}).catch(n=>e.error(`error during get version of database => ${n} `))})}selectDb(e){if(e=e??this.defaultDatabaseName,!e)throw new Error("No database name specified and no default database set.");if(!Object.keys(this.dbConfigs).includes(e))throw new Error(`NgxIndexedDB: Database ${e} is not initialized.`);this.selectedDb=e}createObjectStore(e,n){var t=this;return(0,y.A)(function*(){const r=[e];yield A(t.indexedDB,t.dbConfig.name,++t.dbConfig.version,r,n)})()}add(e,n,t){return new l.Observable(r=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{const s=b(o,p(f.readwrite,e,d=>r.error(d))).objectStore(e),c=t?s.add(n,t):s.add(n);c.onsuccess=function(){var d=(0,y.A)(function*(a){const x=a.target.result,u=s.get(x);u.onsuccess=D=>{r.next(D.target.result),r.complete()},u.onerror=D=>{r.error(D)}});return function(a){return d.apply(this,arguments)}}(),c.onerror=d=>{r.error(d)}}).catch(o=>r.error(o))})}bulkAdd(e,n){const t=new Promise((r,o)=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{const c=b(i,p(f.readwrite,e,r,o)).objectStore(e),d=n.map(a=>new Promise((x,u)=>{const D=a.key;delete a.key;const m=D?c.add(a,D):c.add(a);m.onsuccess=_=>{const B=_.target.result;x(B)}}));r(Promise.all(d))}).catch(i=>o(i))});return(0,l.from)(t)}bulkDelete(e,n){const t=n.map(r=>new Promise((o,i)=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{const c=b(s,p(f.readwrite,e,i,o));c.objectStore(e).delete(r),c.oncomplete=()=>{this.getAll(e).pipe((0,E.take)(1)).subscribe(a=>{o(a)})}}).catch(s=>i(s))}));return(0,l.from)(Promise.all(t))}getByKey(e,n){return new l.Observable(t=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{const s=b(r,p(f.readonly,e,t.error)).objectStore(e).get(n);s.onsuccess=c=>{t.next(c.target.result),t.complete()},s.onerror=c=>{t.error(c)}}).catch(r=>t.error(r))})}bulkGet(e,n){const t=n.map(r=>this.getByKey(e,r));return new l.Observable(r=>{(0,l.combineLatest)(t).subscribe(o=>{r.next(o),r.complete()})})}getByID(e,n){return new l.Observable(t=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{j(r,e,c=>t.error(c));const s=b(r,p(f.readonly,e,t.error,t.next)).objectStore(e).get(n);s.onsuccess=c=>{t.next(c.target.result)}}).catch(r=>t.error(r))})}getByIndex(e,n,t){return new l.Observable(r=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{j(o,e,a=>r.error(a));const d=b(o,p(f.readonly,e,r.error)).objectStore(e).index(n).get(t);d.onsuccess=a=>{r.next(a.target.result),r.complete()}}).catch(o=>r.error(o))})}getAll(e){return new l.Observable(n=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{j(t,e,s=>n.error(s));const i=b(t,p(f.readonly,e,n.error,n.next)).objectStore(e).getAll();i.onerror=s=>{n.error(s)},i.onsuccess=({target:{result:s}})=>{n.next(s),n.complete()}}).catch(t=>n.error(t))})}update(e,n){return new l.Observable(t=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{j(r,e,c=>t.error(c));const i=b(r,p(f.readwrite,e,c=>t.error(c))).objectStore(e),s=i.put(n);s.onsuccess=function(){var c=(0,y.A)(function*(d){const a=d.target.result,x=i.get(a);x.onsuccess=u=>{t.next(u.target.result),t.complete()}});return function(d){return c.apply(this,arguments)}}()}).catch(r=>t.error(r))})}bulkPut(e,n){let t;return new l.Observable(r=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{j(o,e,s=>r.error(s)),t=b(o,p(f.readwrite,e,s=>r.error(s)));const i=t.objectStore(e);n.forEach((s,c)=>{const d=i.put(s);c===n.length-1&&(d.onsuccess=a=>{t.commit(),r.next(a.target.result),r.complete()}),d.onerror=a=>{t.abort(),r.error(a)}})}).catch(o=>{t?.abort(),r.error(o)})})}delete(e,n){return new l.Observable(t=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{j(r,e,s=>t.error(s));const o=b(r,p(f.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(n),o.oncomplete=()=>{this.getAll(e).pipe((0,E.take)(1)).subscribe(s=>{t.next(s),t.complete()})}}).catch(r=>t.error(r))})}deleteByKey(e,n){return new l.Observable(t=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{j(r,e,s=>t.error(s));const o=b(r,p(f.readwrite,e,s=>t.error(s))),i=o.objectStore(e);o.oncomplete=()=>{t.next(!0),t.complete()},i.delete(n)}).catch(r=>t.error(r))})}clear(e){return new l.Observable(n=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{j(t,e,i=>n.error(i));const r=b(t,p(f.readwrite,e,i=>n.error(i)));r.objectStore(e).clear(),r.oncomplete=()=>{n.next(!0),n.complete()}}).catch(t=>n.error(t))})}deleteDatabase(){var e=this;return new l.Observable(n=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(function(){var t=(0,y.A)(function*(r){yield r.close();const o=e.indexedDB.deleteDatabase(e.dbConfig.name);o.onsuccess=()=>{n.next(!0),n.complete()},o.onerror=i=>n.error(i),o.onblocked=()=>{throw new Error("Unable to delete database because it's blocked")}});return function(r){return t.apply(this,arguments)}}()).catch(t=>n.error(t))})}openCursor(e,n,t="next"){return new l.Observable(r=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{j(o,e,d=>r.error(d));const s=b(o,p(f.readonly,e,r.error)).objectStore(e),c=n===void 0?s.openCursor():s.openCursor(n,t);c.onsuccess=d=>{r.next(d),r.complete()}}).catch(o=>r.error(o))})}openCursorByIndex(e,n,t,r="next",o=f.readonly){const i=new l.Subject;return h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{j(s,e,u=>{i.error(u)});const x=b(s,p(o,e,u=>{i.error(u)},()=>{i.next()})).objectStore(e).index(n).openCursor(t,r);x.onsuccess=u=>{i.next(u)}}).catch(s=>i.error(s)),i}getAllByIndex(e,n,t){const r=[];return new l.Observable(o=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{j(i,e,x=>o.error(x));const a=b(i,p(f.readonly,e,o.error)).objectStore(e).index(n).openCursor(t);a.onsuccess=x=>{const u=x.target.result;u?(r.push(u.value),u.continue()):(o.next(r),o.complete())}}).catch(i=>o.error(i))})}getAllKeysByIndex(e,n,t){const r=[];return new l.Observable(o=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(i=>{j(i,e,x=>o.error(x));const a=b(i,p(f.readonly,e,o.error)).objectStore(e).index(n).openKeyCursor(t);a.onsuccess=x=>{const u=x.target.result;u?(r.push({primaryKey:u.primaryKey,key:u.key}),u.continue()):(o.next(r),o.complete())}}).catch(i=>o.error(i))})}count(e,n){return new l.Observable(t=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{j(r,e,c=>t.error(c));const s=b(r,p(f.readonly,e,t.error)).objectStore(e).count(n);s.onerror=c=>t.error(c),s.onsuccess=c=>{t.next(c.target.result),t.complete()}}).catch(r=>t.error(r))})}countByIndex(e,n,t){return new l.Observable(r=>{h(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{j(o,e,a=>r.error(a));const d=b(o,p(f.readonly,e,r.error)).objectStore(e).index(n).count(t);d.onerror=a=>r.error(a),d.onsuccess=a=>{r.next(a.target.result),r.complete()}}).catch(o=>r.error(o))})}deleteObjectStore(e){return k(this.dbConfig.name,++this.dbConfig.version,e)}static{this.\u0275fac=function(n){return new(n||w)(v.\u0275\u0275inject(O),v.\u0275\u0275inject(v.PLATFORM_ID))}}static{this.\u0275prov=v.\u0275\u0275defineInjectable({token:w,factory:w.\u0275fac})}}(typeof ngDevMode>"u"||ngDevMode)&&v.\u0275setClassMetadata(w,[{type:v.Injectable}],()=>[{type:void 0,decorators:[{type:v.Inject,args:[O]}]},{type:void 0,decorators:[{type:v.Inject,args:[v.PLATFORM_ID]}]}],null);class S{static forRoot(...e){const n={};for(const t of e)Object.assign(n,{[t.name]:t});return{ngModule:S,providers:[w,{provide:O,useValue:n}]}}static{this.\u0275fac=function(n){return new(n||S)}}static{this.\u0275mod=v.\u0275\u0275defineNgModule({type:S})}static{this.\u0275inj=v.\u0275\u0275defineInjector({imports:[I.CommonModule]})}}(typeof ngDevMode>"u"||ngDevMode)&&v.\u0275setClassMetadata(S,[{type:v.NgModule,args:[{declarations:[],imports:[I.CommonModule]}]}],null,null)}}]);
