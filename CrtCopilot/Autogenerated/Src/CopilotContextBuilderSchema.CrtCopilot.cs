namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: CopilotContextBuilderSchema

	/// <exclude/>
	public class CopilotContextBuilderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public CopilotContextBuilderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public CopilotContextBuilderSchema(CopilotContextBuilderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7bfe2c48-c131-4fab-8e1e-46aa30baec69");
			Name = "CopilotContextBuilder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("7a3a8162-4be1-46b5-bd50-b3efc2df6d2e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,85,77,79,219,64,16,61,7,137,255,48,117,123,176,37,228,244,12,73,42,72,1,81,209,22,169,84,61,148,170,218,216,227,100,37,123,215,221,93,3,17,240,223,59,251,97,176,141,65,106,47,73,214,251,102,222,155,153,231,137,96,21,234,154,101,8,75,133,204,112,153,46,101,205,75,105,118,119,238,118,119,38,141,230,98,13,223,182,218,96,69,55,101,137,25,97,132,78,79,81,160,226,217,193,16,115,206,197,159,167,135,151,168,20,211,178,48,20,91,85,82,140,223,40,124,233,121,122,194,50,35,21,71,77,8,194,76,167,83,152,233,166,170,152,218,46,194,249,35,22,92,160,6,6,171,134,151,57,42,40,164,130,204,85,67,9,169,60,205,214,8,153,20,6,133,129,66,201,138,176,51,141,104,65,197,60,10,5,47,45,224,214,68,211,69,218,50,77,59,84,117,179,42,121,6,156,64,170,176,253,58,235,199,29,121,114,66,218,190,61,83,234,30,56,140,6,179,193,103,178,180,81,86,237,138,105,204,65,10,135,169,149,188,230,57,157,51,207,228,193,183,38,125,36,152,14,25,102,53,83,172,2,65,83,157,71,89,191,176,197,229,6,219,20,238,155,113,97,57,41,196,144,40,9,43,164,242,178,178,177,148,92,116,101,166,179,169,75,252,196,163,208,52,74,232,54,39,201,111,50,67,113,195,186,152,29,140,47,142,146,180,81,54,77,168,216,245,228,179,143,90,250,160,184,223,89,232,215,145,88,179,60,56,59,252,164,217,179,166,52,71,92,228,148,43,54,219,26,101,17,143,79,38,73,126,81,136,155,159,96,37,100,37,211,26,70,145,251,175,206,214,106,127,171,112,77,175,1,156,112,44,243,125,184,80,252,154,25,244,119,181,63,0,25,48,151,162,220,194,119,141,138,18,9,255,234,192,239,166,119,62,8,25,81,228,62,105,159,97,217,246,86,42,77,68,206,132,129,199,27,114,84,105,60,224,236,83,38,224,44,58,25,40,129,57,60,147,54,9,157,126,81,223,103,52,27,153,235,23,122,112,22,100,93,144,197,130,52,56,197,238,49,62,34,199,119,80,206,141,173,64,163,182,225,215,228,154,41,176,227,37,145,22,145,94,210,239,244,76,127,105,202,242,171,58,174,106,179,141,19,248,224,140,79,14,8,187,236,162,245,148,207,157,192,254,83,240,129,207,235,29,9,75,235,6,191,108,182,180,219,204,108,68,249,194,249,107,15,4,222,116,199,114,168,214,77,101,93,27,245,187,23,237,13,71,157,36,158,244,1,50,102,178,13,196,103,148,132,137,12,15,233,250,218,10,22,199,183,25,214,110,24,120,219,118,97,98,54,74,222,56,218,87,2,226,119,209,88,183,121,85,151,104,229,57,180,91,141,87,209,221,99,23,30,174,34,16,180,89,10,217,136,156,20,19,107,208,248,79,179,127,110,203,255,126,187,67,209,188,128,184,127,3,243,57,8,26,55,220,223,15,98,82,91,176,166,63,140,70,56,212,251,199,206,133,233,218,176,78,89,206,76,180,92,201,53,154,252,100,27,123,206,181,153,121,205,139,56,180,128,122,133,204,142,201,193,173,55,105,41,142,49,39,93,147,186,109,218,118,127,62,116,187,115,119,176,94,80,144,30,230,121,220,141,74,199,154,54,232,82,119,74,109,149,97,203,126,146,92,196,209,149,245,95,203,240,99,131,10,227,26,230,11,120,83,15,223,154,144,107,124,214,238,41,125,252,5,235,234,181,161,39,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7bfe2c48-c131-4fab-8e1e-46aa30baec69"));
		}

		#endregion

	}

	#endregion

}

