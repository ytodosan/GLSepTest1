namespace Creatio.Copilot
{
	using System;
	using System.Collections.Generic;
	using System.Diagnostics;
	using System.Linq;
	using System.Runtime.Serialization;
	using Terrasoft.Enrichment.Interfaces.ChatCompletion;

	[DataContract]
	[Serializable]
	[DebuggerDisplay("Role = {Role}; Content = {Content}")]
	public class CopilotMessage: BaseCopilotMessage
	{

		#region Constructors: Public

		static CopilotMessage() {
			DerivedTypes.Add(typeof(CopilotMessage));
		}

		public CopilotMessage() {
		}

		public CopilotMessage(string content, string role, string toolCallId = null) : base(content, role, toolCallId) {
		}

		public CopilotMessage(string content, string role, long ticks, string toolCallId = null) : base(ticks, content, role, toolCallId) {
			CreatedOnTicks = ticks;
		}

		public CopilotMessage(ToolCall toolCall) : this(null, CopilotMessageRole.Assistant, toolCall.Id) {
			ToolCalls.Add(toolCall);
		}

		public CopilotMessage(ChatMessage completionMessage, bool skipToolCalls = false, Guid? intentId = null)
				: this(completionMessage.Content, completionMessage.Role, completionMessage.ToolCallId) {
			if (!skipToolCalls) {
				ToolCalls = completionMessage.ToolCalls.ToList();
			}
		}

		#endregion

		#region Properties: Public

		/// <summary>
		/// The tool calls generated by the model, such as function calls.
		/// </summary>
		[DataMember(Name = "toolCalls")]
		public List<ToolCall> ToolCalls { get; set; } = new List<ToolCall>();

		/// <summary>
		/// Indicates that the message wag generated by the system prompt.
		/// </summary>
		public bool IsFromSystemPrompt { get; set; }

		/// <summary>
		/// Indicates that the message wag generated by the system intent's prompt.
		/// </summary>
		public bool IsFromSystemIntent { get; set; }

		/// <summary>
		/// Indicates that the message should be truncated on save.
		/// </summary>
		public bool TruncateOnSave { get; set; }

		/// <summary>
		/// Represents the identifier of the summarized message.
		/// </summary>
		public Guid? SummarizedById { get; set; }

		/// <summary>
		/// Represents whether the message is a summary of the session messages.
		/// </summary>
		public bool IsSummary { get; set; }

		/// <summary>
		/// Gets or sets a value indicating whether to omit the assistant's response in the action response.
		/// If set to true, the assistant's response will not be required for the action's response.
		/// This is useful for actions that do not require an assistant's response.
		/// </summary>
		public bool OmitAssistantResponse { get; set; } = false;

		#endregion

		#region Methods: Public

		public static CopilotMessage FromSystem(string content) {
			return new CopilotMessage(content, CopilotMessageRole.System);
		}

		public static CopilotMessage FromSystem(string content, long ticks) {
			return new CopilotMessage(content, CopilotMessageRole.System, ticks);
		}

		public static CopilotMessage FromUser(string content) {
			return new CopilotMessage(content, CopilotMessageRole.User);
		}

		public static CopilotMessage FromAssistant(string content) {
			return new CopilotMessage(content, CopilotMessageRole.Assistant);
		}

		public static CopilotMessage FromAssistant(ToolCall toolCall) {
			return new CopilotMessage(toolCall);
		}

		public static CopilotMessage FromTool(string content, string toolCallId) {
			return new CopilotMessage(content ?? string.Empty, CopilotMessageRole.Tool, toolCallId);
		}

		public ChatMessage ToCompletionApiMessage() {
			return new ChatMessage(Role, Content, ToolCalls, toolCallId: ToolCallId);
		}

		#endregion

	}

}

