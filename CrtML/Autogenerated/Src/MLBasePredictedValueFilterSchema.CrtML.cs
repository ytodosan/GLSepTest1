namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: MLBasePredictedValueFilterSchema

	/// <exclude/>
	public class MLBasePredictedValueFilterSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLBasePredictedValueFilterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLBasePredictedValueFilterSchema(MLBasePredictedValueFilterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("483dda1b-7930-4626-9dc7-57f2d131894d");
			Name = "MLBasePredictedValueFilter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("55d0c38a-eaf5-44ed-bcf3-8e3362908804");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,141,84,193,110,219,48,12,61,167,64,255,129,240,46,41,144,218,247,38,241,97,65,59,4,72,182,98,237,118,87,108,218,17,32,75,134,36,183,240,138,253,251,72,171,78,99,167,205,122,176,96,81,143,228,211,35,41,45,42,116,181,200,16,30,209,90,225,76,225,227,149,209,133,44,27,43,188,52,58,222,110,46,47,94,46,47,38,141,147,186,132,135,214,121,172,230,135,125,169,204,78,168,155,155,149,169,42,2,111,76,89,146,249,237,252,56,42,35,222,63,177,248,145,61,190,213,94,122,137,238,61,192,118,19,175,181,71,91,16,127,6,16,228,139,197,146,88,195,74,9,231,110,96,187,249,42,28,222,91,204,101,230,49,255,45,84,131,119,82,145,79,135,78,146,4,22,174,169,42,97,219,244,117,207,14,144,147,173,133,189,208,185,66,11,133,177,128,204,163,133,66,162,202,161,14,1,57,17,65,200,200,17,153,219,19,39,136,251,200,201,81,232,186,217,41,153,65,198,188,206,210,154,188,116,212,14,55,185,227,140,116,149,123,107,60,50,58,28,143,169,119,134,199,61,130,162,18,160,141,15,152,99,18,147,186,15,2,206,83,121,51,176,40,114,163,85,11,107,42,29,240,183,228,117,43,180,224,40,223,208,111,186,120,211,104,187,137,174,230,175,212,80,231,129,221,144,42,81,172,209,114,181,78,232,190,37,254,229,208,82,135,105,12,250,141,182,47,80,162,159,131,163,229,239,249,100,228,228,188,109,50,111,44,167,235,228,61,35,205,90,83,27,9,37,255,160,3,1,26,159,65,146,191,208,212,249,166,0,79,194,45,28,34,100,22,139,101,244,94,125,30,208,83,125,162,36,13,53,252,64,224,206,82,11,43,42,208,52,90,203,168,25,220,47,74,185,68,108,131,236,96,140,23,73,231,17,42,20,250,228,227,14,153,142,20,27,38,184,2,158,213,201,100,4,90,142,96,60,77,147,255,8,188,69,191,55,249,103,180,93,9,165,168,178,207,123,212,195,57,209,72,102,111,96,135,92,81,174,254,174,237,135,135,54,135,105,249,140,144,33,112,16,48,252,15,116,59,193,103,70,53,149,238,132,251,78,134,40,229,181,175,117,56,124,37,112,54,140,69,215,40,31,210,142,153,159,56,90,244,141,213,46,93,100,41,181,38,46,146,44,133,107,144,69,192,67,37,218,35,41,72,151,78,165,25,160,162,39,231,26,200,171,16,244,203,110,20,187,15,118,212,21,79,210,250,70,40,216,25,163,224,135,166,150,108,234,97,143,76,111,131,254,65,161,25,141,121,247,46,141,196,152,133,247,81,22,50,235,30,249,159,221,37,33,220,181,111,161,144,31,248,34,103,218,37,88,135,70,178,253,3,130,193,87,214,88,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("483dda1b-7930-4626-9dc7-57f2d131894d"));
		}

		#endregion

	}

	#endregion

}

