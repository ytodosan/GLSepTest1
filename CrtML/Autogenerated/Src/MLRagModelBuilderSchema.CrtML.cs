namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: MLRagModelBuilderSchema

	/// <exclude/>
	public class MLRagModelBuilderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public MLRagModelBuilderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public MLRagModelBuilderSchema(MLRagModelBuilderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7597e722-899f-4aaf-8e22-dff2db0fe9f0");
			Name = "MLRagModelBuilder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("156df22d-8b42-46c8-91d7-a4aa335a181f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,149,148,77,111,219,48,12,134,207,41,208,255,64,116,23,7,40,156,157,219,36,198,154,174,64,187,184,9,214,220,134,29,20,155,73,180,217,146,39,201,237,178,98,255,125,180,228,120,78,44,15,221,205,50,95,190,124,72,125,8,150,163,46,88,130,176,66,165,152,150,27,19,206,164,216,240,109,169,152,225,82,132,241,252,252,236,245,252,108,80,106,46,182,240,136,47,70,10,43,123,208,20,157,115,241,227,186,137,182,61,242,92,10,127,68,97,120,199,18,35,21,71,77,10,210,188,83,184,165,90,48,203,152,214,87,16,207,63,179,109,44,83,204,110,74,158,165,168,172,104,52,26,193,88,151,121,206,212,126,90,175,239,243,34,195,28,133,209,96,118,8,107,220,177,103,46,21,200,141,93,147,13,153,89,167,131,193,168,229,240,229,22,55,172,204,204,13,23,41,65,6,102,95,160,220,4,247,117,74,93,124,120,9,143,52,37,152,144,21,141,70,27,29,146,239,82,201,53,149,94,81,202,240,43,121,21,229,58,227,9,36,85,7,221,6,170,158,234,98,199,125,13,94,109,111,205,4,98,52,59,153,210,12,150,214,207,5,79,59,183,63,98,84,91,212,176,225,6,10,166,8,208,160,210,97,35,31,157,234,199,86,5,130,148,147,11,82,179,148,25,118,49,93,209,152,14,171,112,60,178,162,158,156,10,220,157,141,139,105,60,7,187,134,228,232,176,180,13,234,137,200,103,218,122,158,34,60,75,158,58,234,59,110,150,149,76,7,118,24,79,201,14,115,22,215,16,13,205,229,97,235,92,77,104,213,31,66,117,34,7,131,53,211,24,158,88,254,77,111,39,92,91,125,211,168,211,210,150,158,254,137,34,16,248,2,45,174,218,182,118,56,236,107,83,175,218,128,62,183,144,84,81,184,146,139,245,55,76,204,184,147,59,13,134,135,130,157,216,161,96,99,31,46,10,20,140,127,40,248,39,220,83,45,127,32,188,215,143,101,150,45,212,199,188,48,251,96,104,61,6,81,123,22,71,122,23,191,234,113,59,69,152,103,185,165,172,239,131,63,240,22,132,182,190,139,208,142,246,33,208,253,35,123,47,132,11,253,15,134,203,232,7,113,241,62,148,21,230,5,210,5,40,149,127,40,237,120,20,185,42,129,15,227,200,104,2,239,33,130,32,149,116,141,48,26,10,234,5,174,188,244,173,180,206,161,185,149,73,89,189,143,49,251,57,219,149,226,251,19,255,117,12,233,21,120,41,253,86,53,38,23,198,203,232,75,234,133,108,20,11,122,51,50,86,120,65,59,162,127,194,118,45,223,8,124,154,232,127,65,170,27,78,148,15,238,134,135,119,116,78,220,103,208,128,187,196,223,245,51,143,34,117,47,189,93,187,191,199,63,233,223,31,7,93,12,3,149,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7597e722-899f-4aaf-8e22-dff2db0fe9f0"));
		}

		#endregion

	}

	#endregion

}

